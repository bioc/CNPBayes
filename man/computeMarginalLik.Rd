% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/methods-MarginalModel.R
\name{computeMarginalLik}
\alias{computeMarginalLik}
\title{Estimate the marginal density of a mixture model with k components}
\usage{
computeMarginalLik(y, batch, K = 1:4, T = 1000, burnin = 200, T2 = 200,
  maxperm = 3, nchains = 3, thin = 1)
}
\arguments{
\item{y}{a numeric vector, possibly multi-modal}

\item{batch}{an integer-vector indicating the batch for each
observation was derived}

\item{K}{integer vector of possible copy numbers (latent variable states)}

\item{T}{number of MCMC iterations}

\item{burnin}{number of MCMC burnin iterations to be discarded}

\item{T2}{number of MCMC iterations after permuting the modes.  See \code{maxperm}.}

\item{maxperm}{a length-one integer vector.  For a mixture model
with K components, there are K! possible modes.  \code{maxperm}
indicates the maximum number of permutations to explore.}

\item{nchains}{number of parallel MCMC chains to run}

\item{thin}{number of thinning intervals}
}
\description{
This function is used to estimate the marginal density of a mixture
model with k components.  If k is specified as an integer vector,
the marginal density is estimated for each k.
}
\seealso{
\code{\link{logBayesFactor}} for computing the bayes
factor for two models, \code{\link{orderModels}} for ordering a
list of models by decreasing marginal density, and \code{plot} for
visualizing the component densities.
}

