% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/methods-MixtureModel.R,
%   R/deprecated_functions.R, R/posteriorSimulation-methods.R
\docType{methods}
\name{posteriorSimulation}
\alias{posteriorSimulation}
\alias{posteriorSimulation,list,ANY-method}
\alias{posteriorSimulation,list-method}
\alias{posteriorSimulation,MixtureModel,integer-method}
\alias{posteriorSimulation,MixtureModel-method}
\alias{posteriorSimulation,MixtureModel,numeric-method}
\alias{posteriorSimulation,MixtureModel-method}
\alias{posteriorSimulation,MixtureModel,ANY-method}
\alias{posteriorSimulation,MixtureModel-method}
\title{Run the MCMC simulation.}
\usage{
posteriorSimulation(object, k)

\S4method{posteriorSimulation}{list,ANY}(object)

\S4method{posteriorSimulation}{MixtureModel,integer}(object, k)

\S4method{posteriorSimulation}{MixtureModel,numeric}(object, k)

\S4method{posteriorSimulation}{MixtureModel,ANY}(object)
}
\arguments{
\item{object}{see showMethods(posteriorSimulation)}

\item{k}{The number of a priori components. This is optional and if not
specified, the stored k model components are used. This parameters is
useful for running multiple models of varying components.}
}
\value{
An object of class 'MarginalModel' or 'BatchModel'
}
\description{
nStarts chains are run. b burnin iterations are run and then discarded.
Next, s iterations are run in each train. The user can also specify
an alternative number of components.
The mode of the MCMC simulation is also calculated.
}
\examples{
# Fit model with pre-specified number of components (k=3)
set.seed(123)
## specify small number of iterations so that the example runs quickly
mp <- McmcParams(iter=2, burnin=0, nStarts=3)
mcmcParams(MarginalModelExample) <- mp
posteriorSimulation(MarginalModelExample)

# Run additional iterations, but set nStart = 0 so that the last value of the
# chain is the first value of the next chain
mcmcParams(MarginalModelExample) <- McmcParams(iter=5, nStarts=0, burnin=0)
posteriorSimulation(MarginalModelExample)

# Fit batch models of different sizes (k=1 and 2)
mcmcParams(BatchModelExample) <- mp
yy <- sample(y(BatchModelExample), 300)
batches <- rep(1:3, length.out=length(yy))
mlist <- BatchModelList(yy, batch=batches, k=1:2, mcmc.params=mp)
mlist <- posteriorSimulation(mlist)
## continue running 10 additional iterations by setting nStarts=0. The last
#value of the chains will be used as the first value of the next chain
mcmcParams(mlist) <- McmcParams(iter=3, burnin=0, nStarts=0)
mlist <- posteriorSimulation(mlist)
}
\seealso{
\code{\link{ggMultiBatchChains}} and \code{\link{ggSingleBatchChains}} for diagnosing convergence.  See \code{\link{ggMultiBatch}} and \code{\link{ggSingleBatch}} for plotting the model-based densities.
}
